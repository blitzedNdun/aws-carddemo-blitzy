# Test application configuration for CardDemo backend testing
# Optimized for H2 in-memory database with PostgreSQL compatibility

spring:
  # Database configuration for H2 testing
  datasource:
    url: jdbc:h2:mem:carddemo_test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=PostgreSQL
    username: sa
    password: 
    driver-class-name: org.h2.Driver
    
    # Schema initialization
    initialization-mode: always
    schema: classpath:schema-test.sql
    data: classpath:test-data.sql
    separator: ;
    continue-on-error: false
    
  # JPA/Hibernate configuration for testing
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop  # Create schema for tests, drop after
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        jdbc:
          batch_size: 10
        order_inserts: true
        order_updates: true
        use_sql_comments: true
        generate_statistics: true
        globally_quoted_identifiers: false
        id:
          new_generator_mappings: true
        temp:
          use_jdbc_metadata_defaults: false
        connection:
          provider_disables_autocommit: true
          autocommit: false
          charSet: UTF-8
          characterEncoding: UTF-8
          useUnicode: true
        query:
          plan_cache_max_size: 512
          plan_parameter_metadata_max_size: 64
          in_clause_parameter_padding: true
        session:
          events:
            log:
              LOG_QUERIES_SLOWER_THAN_MS: 100

  # Transaction configuration for testing
  transaction:
    rollback-on-commit-failure: true

# Test-specific logging configuration
logging:
  level:
    com.carddemo: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type: TRACE
    org.springframework.orm.jpa: DEBUG
    org.springframework.transaction: DEBUG
  pattern:
    console: '%d{yyyy-MM-dd HH:mm:ss} - %msg%n'

# Test connection pool configuration (HikariCP)
hikari:
  pool-name: CardDemo-Test-H2-HikariCP
  maximum-pool-size: 5
  minimum-idle: 1
  connection-timeout: 10000
  idle-timeout: 60000
  max-lifetime: 300000
  leak-detection-threshold: 30000
  connection-test-query: SELECT 1
  data-source-properties:
    cachePrepStmts: true
    prepStmtCacheSize: 50
    prepStmtCacheSqlLimit: 1024
    useServerPrepStmts: true