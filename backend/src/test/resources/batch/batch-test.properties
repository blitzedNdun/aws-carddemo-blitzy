# =============================================================================
# Spring Batch Test Configuration Properties
# =============================================================================
# This file defines comprehensive batch test configuration for COBOL-to-Java
# migration testing, ensuring Spring Batch 5.x jobs maintain functional parity
# with original JCL batch processing while meeting 4-hour processing window.
#
# Based on Section 0 requirements for minimal change approach and exact
# COBOL-to-Java translation maintaining existing program flow and logic.
# =============================================================================

# -----------------------------------------------------------------------------
# Core Batch Processing Configuration
# -----------------------------------------------------------------------------
# Chunk size matching CICS transaction boundaries for optimal performance
batch.chunk.size=1000

# Maximum thread pool size for parallel batch processing
batch.max.threads=4

# Retry limit for transient errors equivalent to JCL RESTART
batch.retry.limit=3

# Skip limit for processing errors before job termination
batch.skip.limit=10

# Job restart capability configuration matching JCL RESTART behavior
batch.restart.enabled=true

# Job repository table prefix for test isolation
batch.table.prefix=BATCH_TEST_

# Enable job parameters incremental for unique job instances
batch.job.incremental=true

# -----------------------------------------------------------------------------
# Transaction Management Configuration (CICS SYNCPOINT Equivalent)
# -----------------------------------------------------------------------------
# Transaction timeout in seconds matching CICS SYNCPOINT behavior
transaction.timeout=300

# Transaction isolation level for batch processing consistency
transaction.isolation=READ_COMMITTED

# Rollback behavior for chunk processing errors
transaction.rollback.on.error=true

# Commit interval for large dataset processing
transaction.commit.interval=1000

# -----------------------------------------------------------------------------
# Data Processing and Encoding Configuration
# -----------------------------------------------------------------------------
# File encoding for mainframe EBCDIC to UTF-8 conversion
file.encoding=UTF-8

# Character set for input file processing
file.charset=UTF-8

# Line separator for cross-platform compatibility
file.line.separator=\n

# Fixed-width file parsing configuration
file.fixed.width.enabled=true

# Strip BOM (Byte Order Mark) from files
file.strip.bom=true

# -----------------------------------------------------------------------------
# VSAM KSDS to PostgreSQL Mapping Configuration
# -----------------------------------------------------------------------------
# Enable VSAM key padding for composite key structures
vsam.key.padding=true

# VSAM key padding character (spaces for COBOL compatibility)
vsam.key.padding.char=\u0020

# VSAM alternate index simulation
vsam.alternate.index.enabled=true

# VSAM record sequencing for ordered processing
vsam.record.sequencing=true

# -----------------------------------------------------------------------------
# COBOL COMP-3 Data Type Configuration
# -----------------------------------------------------------------------------
# Scale for COMP-3 packed decimal conversion to BigDecimal
comp3.scale=2

# Precision for COMP-3 packed decimal fields
comp3.precision=15

# Rounding mode matching COBOL ROUNDED clause behavior
comp3.rounding.mode=HALF_UP

# Enable exact COMP-3 precision preservation
comp3.exact.precision=true

# COMP-3 sign handling for positive/negative values
comp3.sign.handling=true

# -----------------------------------------------------------------------------
# COBOL PIC Clause Data Formatting
# -----------------------------------------------------------------------------
# Enable PIC clause string formatting preservation
pic.string.formatting=true

# PIC numeric field zero-padding
pic.numeric.zero.padding=true

# PIC alphanumeric field space-padding
pic.alphanumeric.space.padding=true

# PIC field length validation
pic.field.length.validation=true

# -----------------------------------------------------------------------------
# Date and Time Processing Configuration
# -----------------------------------------------------------------------------
# Date format matching COBOL date handling (CCYYMMDD)
date.format=yyyyMMdd

# Time format for timestamp fields
time.format=HHmmss

# Timezone for date processing
date.timezone=UTC

# Date validation for COBOL date constraints
date.validation.enabled=true

# -----------------------------------------------------------------------------
# Performance and Memory Configuration
# -----------------------------------------------------------------------------
# Initial heap size for batch processing
batch.heap.initial=512m

# Maximum heap size for large dataset processing
batch.heap.maximum=2g

# Garbage collection optimization for batch processing
batch.gc.optimization=G1GC

# Memory monitoring enabled for performance validation
batch.memory.monitoring=true

# -----------------------------------------------------------------------------
# Test-Specific Configuration
# -----------------------------------------------------------------------------
# Test data volume for performance testing
test.data.volume=10000

# Test execution timeout in minutes
test.execution.timeout=240

# Enable parallel test execution
test.parallel.execution=true

# Test data cleanup after execution
test.data.cleanup=true

# Test result validation against COBOL output
test.cobol.output.validation=true

# -----------------------------------------------------------------------------
# Job Repository Configuration
# -----------------------------------------------------------------------------
# Database schema for Spring Batch metadata tables
spring.batch.job.schema=batch_test

# Job repository isolation mode for test execution
spring.batch.job.repository.isolation=ISOLATION_READ_COMMITTED

# Job execution table cleanup interval (in days)
spring.batch.job.execution.cleanup.days=7

# Enable job execution statistics collection
spring.batch.job.statistics.enabled=true

# -----------------------------------------------------------------------------
# Step Execution Configuration
# -----------------------------------------------------------------------------
# Step execution commit interval
step.commit.interval=1000

# Step execution timeout in minutes
step.execution.timeout=60

# Step restart from failure point
step.restart.from.failure=true

# Step execution statistics collection
step.statistics.enabled=true

# -----------------------------------------------------------------------------
# Item Processing Configuration
# -----------------------------------------------------------------------------
# Item reader buffer size for optimal I/O
item.reader.buffer.size=8192

# Item writer batch size for database operations
item.writer.batch.size=100

# Item processor validation enabled
item.processor.validation=true

# Item processing error handling mode
item.processing.error.handling=SKIP

# -----------------------------------------------------------------------------
# External System Integration Configuration
# -----------------------------------------------------------------------------
# Database connection pool size for batch operations
datasource.batch.pool.size=10

# Database connection timeout for batch operations
datasource.batch.connection.timeout=30000

# Database query timeout for large datasets
datasource.batch.query.timeout=300000

# Redis session timeout for batch job state
redis.session.timeout=3600

# -----------------------------------------------------------------------------
# Monitoring and Logging Configuration
# -----------------------------------------------------------------------------
# Enable Micrometer metrics collection for batch jobs
management.metrics.batch.enabled=true

# Job execution metrics export to Prometheus
management.metrics.export.prometheus.enabled=true

# Batch processing performance metrics collection
batch.performance.metrics=true

# Detailed logging for batch operations
logging.level.org.springframework.batch=DEBUG

# SQL logging for database operations validation
logging.level.org.hibernate.SQL=DEBUG

# Parameter logging for debugging test scenarios
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# -----------------------------------------------------------------------------
# File Processing Configuration
# -----------------------------------------------------------------------------
# Input file directory for test data
batch.input.directory=/tmp/batch/input

# Output file directory for test results
batch.output.directory=/tmp/batch/output

# Archive directory for processed files
batch.archive.directory=/tmp/batch/archive

# Error file directory for failed records
batch.error.directory=/tmp/batch/error

# File processing buffer size
file.processing.buffer.size=65536

# File validation before processing
file.validation.enabled=true

# -----------------------------------------------------------------------------
# Error Handling and Recovery Configuration
# -----------------------------------------------------------------------------
# Error record logging enabled
error.record.logging=true

# Error record file format (JSON/CSV/FIXED)
error.record.format=JSON

# Maximum error records before job failure
error.record.max.count=100

# Error notification enabled for critical failures
error.notification.enabled=true

# Recovery job automatic scheduling
recovery.job.auto.schedule=true

# -----------------------------------------------------------------------------
# Business Logic Validation Configuration
# -----------------------------------------------------------------------------
# Financial calculation precision validation
financial.calculation.precision.validation=true

# Business rule validation against COBOL logic
business.rule.validation=true

# Cross-reference data validation
cross.reference.validation=true

# Account balance validation
account.balance.validation=true

# Transaction type validation
transaction.type.validation=true

# Interest calculation validation
interest.calculation.validation=true

# -----------------------------------------------------------------------------
# Test Environment Specific Settings
# -----------------------------------------------------------------------------
# Mock external services for isolated testing
mock.external.services=true

# Test database auto-cleanup
test.database.auto.cleanup=true

# Test file auto-cleanup
test.file.auto.cleanup=true

# Test metrics collection
test.metrics.collection=true

# Test execution reporting
test.execution.reporting=true

# Parallel test execution safety
test.parallel.safety=true