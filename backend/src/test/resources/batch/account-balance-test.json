{
  "testDescription": "Account balance test scenarios for InterestCalculationJob validation",
  "testPurpose": "Validate penny-level accuracy in interest calculations matching COBOL COMP-3 behavior per Section 0 requirements",
  "precision": {
    "cobolMapping": "PIC S9(10)V99 COMP-3 fields map to Java BigDecimal with scale=2",
    "roundingMode": "HALF_UP to match COBOL ROUNDED clause behavior",
    "validationCriteria": "Byte-for-byte identical output for all test scenarios"
  },
  "testScenarios": [
    {
      "scenarioId": "NORMAL_BALANCE_01",
      "description": "Standard positive balance with normal interest rate",
      "accountId": "00000000001",
      "currentBalance": "1250.75",
      "creditLimit": "5000.00",
      "cashCreditLimit": "2500.00",
      "activeStatus": "Y",
      "groupId": "DEFAULT",
      "interestRate": "18.99",
      "expectedDailyInterest": "0.65",
      "expectedMonthlyInterest": "19.77",
      "businessLogicBranch": "standard_positive_balance",
      "notes": "Validates standard interest calculation for positive balance"
    },
    {
      "scenarioId": "ZERO_BALANCE_01",
      "description": "Zero balance account should generate zero interest",
      "accountId": "00000000002",
      "currentBalance": "0.00",
      "creditLimit": "3000.00",
      "cashCreditLimit": "1500.00",
      "activeStatus": "Y",
      "groupId": "DEFAULT",
      "interestRate": "15.50",
      "expectedDailyInterest": "0.00",
      "expectedMonthlyInterest": "0.00",
      "businessLogicBranch": "zero_balance",
      "notes": "Edge case: zero balance should not accrue interest"
    },
    {
      "scenarioId": "NEGATIVE_BALANCE_01",
      "description": "Negative balance (over credit limit) with penalty rate",
      "accountId": "00000000003",
      "currentBalance": "-5250.00",
      "creditLimit": "5000.00",
      "cashCreditLimit": "2500.00",
      "activeStatus": "Y",
      "groupId": "OVERLIMIT",
      "interestRate": "29.99",
      "expectedDailyInterest": "-4.31",
      "expectedMonthlyInterest": "-131.39",
      "businessLogicBranch": "negative_balance_overlimit",
      "notes": "Validates penalty interest on over-limit accounts"
    },
    {
      "scenarioId": "MAXIMUM_CREDIT_LIMIT_01",
      "description": "Account at maximum credit limit boundary",
      "accountId": "00000000004",
      "currentBalance": "9999999.99",
      "creditLimit": "9999999.99",
      "cashCreditLimit": "4999999.99",
      "activeStatus": "Y",
      "groupId": "PREMIUM",
      "interestRate": "12.99",
      "expectedDailyInterest": "355.62",
      "expectedMonthlyInterest": "10823.61",
      "businessLogicBranch": "maximum_limit",
      "notes": "Tests maximum field value boundary per COBOL PIC S9(10)V99"
    },
    {
      "scenarioId": "PRECISION_BOUNDARY_01",
      "description": "Penny precision boundary test - $0.01 balance",
      "accountId": "00000000005",
      "currentBalance": "0.01",
      "creditLimit": "1000.00",
      "cashCreditLimit": "500.00",
      "activeStatus": "Y",
      "groupId": "DEFAULT",
      "interestRate": "18.99",
      "expectedDailyInterest": "0.00",
      "expectedMonthlyInterest": "0.00",
      "businessLogicBranch": "minimal_balance",
      "notes": "COMP-3 precision test: minimal balance should round to zero interest"
    },
    {
      "scenarioId": "PRECISION_BOUNDARY_02",
      "description": "Penny precision boundary test - $0.99 balance",
      "accountId": "00000000006",
      "currentBalance": "0.99",
      "creditLimit": "1000.00",
      "cashCreditLimit": "500.00",
      "activeStatus": "Y",
      "groupId": "DEFAULT",
      "interestRate": "18.99",
      "expectedDailyInterest": "0.01",
      "expectedMonthlyInterest": "0.02",
      "businessLogicBranch": "minimal_balance",
      "notes": "COMP-3 precision test: validates rounding behavior at sub-dollar amounts"
    },
    {
      "scenarioId": "INACTIVE_ACCOUNT_01",
      "description": "Inactive account should not accrue interest",
      "accountId": "00000000007",
      "currentBalance": "750.00",
      "creditLimit": "2000.00",
      "cashCreditLimit": "1000.00",
      "activeStatus": "N",
      "groupId": "DEFAULT",
      "interestRate": "18.99",
      "expectedDailyInterest": "0.00",
      "expectedMonthlyInterest": "0.00",
      "businessLogicBranch": "inactive_account",
      "notes": "Business rule: inactive accounts do not accrue interest"
    },
    {
      "scenarioId": "HIGH_INTEREST_RATE_01",
      "description": "High interest rate boundary test",
      "accountId": "00000000008",
      "currentBalance": "1000.00",
      "creditLimit": "2000.00",
      "cashCreditLimit": "1000.00",
      "activeStatus": "Y",
      "groupId": "SUBPRIME",
      "interestRate": "35.99",
      "expectedDailyInterest": "0.99",
      "expectedMonthlyInterest": "29.99",
      "businessLogicBranch": "high_interest_rate",
      "notes": "Tests high interest rate calculation accuracy"
    },
    {
      "scenarioId": "LOW_INTEREST_RATE_01",
      "description": "Low interest rate boundary test",
      "accountId": "00000000009",
      "currentBalance": "5000.00",
      "creditLimit": "10000.00",
      "cashCreditLimit": "5000.00",
      "activeStatus": "Y",
      "groupId": "PREMIUM",
      "interestRate": "6.99",
      "expectedDailyInterest": "0.96",
      "expectedMonthlyInterest": "29.16",
      "businessLogicBranch": "low_interest_rate",
      "notes": "Tests low interest rate calculation accuracy"
    },
    {
      "scenarioId": "COMP3_PRECISION_01",
      "description": "COMP-3 decimal precision validation - complex calculation",
      "accountId": "00000000010",
      "currentBalance": "1234.56",
      "creditLimit": "3000.00",
      "cashCreditLimit": "1500.00",
      "activeStatus": "Y",
      "groupId": "DEFAULT",
      "interestRate": "17.75",
      "expectedDailyInterest": "0.60",
      "expectedMonthlyInterest": "18.30",
      "businessLogicBranch": "standard_positive_balance",
      "notes": "Validates COMP-3 packed decimal precision in complex calculations"
    },
    {
      "scenarioId": "COMP3_PRECISION_02",
      "description": "COMP-3 decimal precision validation - fractional cents",
      "accountId": "00000000011",
      "currentBalance": "999.99",
      "creditLimit": "2000.00",
      "cashCreditLimit": "1000.00",
      "activeStatus": "Y",
      "groupId": "DEFAULT",
      "interestRate": "19.99",
      "expectedDailyInterest": "0.55",
      "expectedMonthlyInterest": "16.67",
      "businessLogicBranch": "standard_positive_balance",
      "notes": "Tests COMP-3 rounding behavior with fractional cent calculations"
    },
    {
      "scenarioId": "EDGE_CASE_OVERLIMIT_01",
      "description": "Exactly at credit limit - no overlimit fees",
      "accountId": "00000000012",
      "currentBalance": "2500.00",
      "creditLimit": "2500.00",
      "cashCreditLimit": "1250.00",
      "activeStatus": "Y",
      "groupId": "DEFAULT",
      "interestRate": "18.99",
      "expectedDailyInterest": "1.30",
      "expectedMonthlyInterest": "39.58",
      "businessLogicBranch": "at_credit_limit",
      "notes": "Boundary test: exactly at credit limit should use standard rate"
    },
    {
      "scenarioId": "EDGE_CASE_OVERLIMIT_02",
      "description": "One cent over credit limit - triggers overlimit processing",
      "accountId": "00000000013",
      "currentBalance": "2500.01",
      "creditLimit": "2500.00",
      "cashCreditLimit": "1250.00",
      "activeStatus": "Y",
      "groupId": "OVERLIMIT",
      "interestRate": "29.99",
      "expectedDailyInterest": "2.05",
      "expectedMonthlyInterest": "62.49",
      "businessLogicBranch": "over_credit_limit",
      "notes": "Boundary test: one cent over limit triggers penalty rate"
    },
    {
      "scenarioId": "LARGE_BALANCE_01",
      "description": "Large balance near maximum field capacity",
      "accountId": "00000000014",
      "currentBalance": "9876543.21",
      "creditLimit": "10000000.00",
      "cashCreditLimit": "5000000.00",
      "activeStatus": "Y",
      "groupId": "CORPORATE",
      "interestRate": "8.99",
      "expectedDailyInterest": "243.29",
      "expectedMonthlyInterest": "7406.19",
      "businessLogicBranch": "large_balance",
      "notes": "Tests calculation accuracy with large balances near COBOL field limits"
    },
    {
      "scenarioId": "INTEREST_RATE_ZERO_01",
      "description": "Zero interest rate promotional account",
      "accountId": "00000000015",
      "currentBalance": "1500.00",
      "creditLimit": "3000.00",
      "cashCreditLimit": "1500.00",
      "activeStatus": "Y",
      "groupId": "PROMOTIONAL",
      "interestRate": "0.00",
      "expectedDailyInterest": "0.00",
      "expectedMonthlyInterest": "0.00",
      "businessLogicBranch": "zero_interest_rate",
      "notes": "Edge case: zero interest rate should generate zero interest regardless of balance"
    }
  ],
  "validationRules": {
    "precisionValidation": {
      "description": "All interest calculations must match COBOL COMP-3 precision",
      "requirements": [
        "BigDecimal scale must be set to 2 for currency fields",
        "RoundingMode.HALF_UP must be used to match COBOL ROUNDED behavior",
        "Daily interest = (balance * rate / 100) / 365",
        "Monthly interest = daily interest * 30",
        "All results rounded to 2 decimal places"
      ]
    },
    "businessLogicBranches": {
      "description": "Test scenarios must cover all business logic execution paths",
      "branches": [
        "standard_positive_balance",
        "zero_balance",
        "negative_balance_overlimit",
        "maximum_limit",
        "minimal_balance",
        "inactive_account",
        "high_interest_rate",
        "low_interest_rate",
        "at_credit_limit",
        "over_credit_limit",
        "large_balance",
        "zero_interest_rate"
      ]
    },
    "boundaryConditions": {
      "description": "Critical boundary values that must be tested",
      "conditions": [
        "Balance = 0.00 (zero balance)",
        "Balance = 0.01 (minimum positive)",
        "Balance = 0.99 (sub-dollar)",
        "Balance = credit limit (exactly at limit)",
        "Balance = credit limit + 0.01 (one cent over)",
        "Balance = 9999999.99 (maximum field value)",
        "Interest rate = 0.00 (promotional rate)",
        "Interest rate = 35.99 (maximum penalty rate)"
      ]
    }
  },
  "expectedUsage": {
    "testClass": "InterestCalculationJobTest",
    "testMethods": [
      "testStandardBalanceCalculations()",
      "testBoundaryConditions()",
      "testComp3PrecisionValidation()",
      "testBusinessLogicBranches()",
      "testOverlimitProcessing()",
      "testInactiveAccountHandling()"
    ],
    "integrationWith": [
      "SpringBatchTestUtils",
      "BigDecimal precision validation utilities",
      "Account entity test builders",
      "DisclosureGroup test data"
    ]
  }
}