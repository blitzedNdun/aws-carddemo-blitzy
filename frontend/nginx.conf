# NGINX Configuration for CardDemo React SPA
# Production-ready configuration for serving React Single Page Application
# Supports client-side routing, API proxying, security headers, and performance optimization
# Compatible with NGINX 1.25.x Alpine container running as non-root user

# Global Configuration
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Events Configuration
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

# HTTP Configuration Block
http {
    # MIME Types and Default Settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging Configuration
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;
    
    # Performance Optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 16M;
    
    # Gzip Compression Configuration
    # Enables compression for React build artifacts and API responses
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;
    
    # Security Headers Configuration
    # Implements security best practices for React SPA and API communication
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    
    # Content Security Policy for React Application
    # Configured for Material-UI components and inline styles
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self'; frame-ancestors 'self';" always;
    
    # Backend Service Upstream Configuration
    # Spring Boot backend running on port 8080 in Kubernetes environment
    upstream backend_service {
        server backend:8080;
        keepalive 32;
    }
    
    # Main Server Block - React SPA and API Gateway
    server {
        listen 80;
        listen [::]:80;
        server_name _;
        root /usr/share/nginx/html;
        index index.html;
        
        # Error page configuration
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        
        # Security: Hide NGINX version
        server_tokens off;
        
        # API Proxy Configuration
        # Proxies all /api/* requests to Spring Boot backend service
        # Maintains session cookies (JSESSIONID/XSRF-TOKEN) for Spring Session Redis
        location /api/ {
            proxy_pass http://backend_service;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            # Session cookie handling for Spring Security authentication
            proxy_cookie_path / "/; Secure; HttpOnly; SameSite=Strict";
            
            # Timeouts for Spring Boot application response
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
            
            # Buffer configuration for large JSON responses
            proxy_buffering on;
            proxy_buffer_size 16k;
            proxy_buffers 8 16k;
            proxy_busy_buffers_size 32k;
            
            # Disable caching for API responses
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
        }
        
        # Static Asset Caching Configuration
        # Optimized caching for React build artifacts with fingerprinted filenames
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary "Accept-Encoding";
            
            # CORS headers for font assets
            location ~* \.(woff|woff2|ttf|eot)$ {
                add_header Access-Control-Allow-Origin "*";
                add_header Access-Control-Allow-Methods "GET, OPTIONS";
                add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept";
            }
        }
        
        # React Router Client-Side Routing Support
        # Implements try_files directive for SPA routing with fallback to index.html
        # Handles all non-API, non-static asset requests for React Router navigation
        location / {
            try_files $uri $uri/ @fallback;
            
            # Cache control for HTML files
            add_header Cache-Control "no-cache, no-store, must-revalidate" always;
            add_header Pragma "no-cache" always;
            add_header Expires "0" always;
            
            # Security headers for main application
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
        }
        
        # Fallback for React Router
        # Serves index.html for all unmatched routes to enable client-side routing
        location @fallback {
            rewrite ^.*$ /index.html last;
        }
        
        # Health Check Endpoint
        # Provides basic health status for Kubernetes liveness/readiness probes
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Favicon handling
        location = /favicon.ico {
            log_not_found off;
            access_log off;
            expires 1y;
            add_header Cache-Control "public, immutable";
        }
        
        # Robots.txt handling
        location = /robots.txt {
            log_not_found off;
            access_log off;
            return 200 "User-agent: *\nDisallow: /\n";
        }
        
        # Security: Block access to hidden files and directories
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Security: Block access to backup and config files
        location ~* \.(bak|config|sql|log|swp|old)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
    
    # Error Page Configuration
    location = /50x.html {
        root /usr/share/nginx/html;
        internal;
    }
}