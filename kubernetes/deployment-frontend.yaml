# CardDemo Frontend Deployment Manifest
# React 18.x Single Page Application served via NGINX 1.25.x
# Provides screen-for-screen functional parity with original BMS mapsets
# Replaces 3270 terminal screens with modern web UI

apiVersion: apps/v1
kind: Deployment
metadata:
  name: carddemo-frontend
  labels:
    app: carddemo-frontend
    tier: frontend
    component: react-spa
    version: v2.1.0
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: carddemo-frontend
  template:
    metadata:
      labels:
        app: carddemo-frontend
        tier: frontend
        version: v2.1.0
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 101  # nginx user
        runAsGroup: 101
        fsGroup: 101
      containers:
      - name: frontend-nginx
        image: carddemo/frontend-spa:v2.1.0
        imagePullPolicy: Always
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        livenessProbe:
          httpGet:
            path: /
            port: 80
            httpHeaders:
            - name: Accept
              value: text/html
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 80
            httpHeaders:
            - name: Accept
              value: text/html
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 2
        env:
        - name: NODE_ENV
          value: "production"
        - name: REACT_APP_API_GATEWAY_URL
          valueFrom:
            configMapKeyRef:
              name: carddemo-frontend-config
              key: api-gateway-url
        - name: REACT_APP_APP_NAME
          value: "CardDemo"
        - name: NGINX_WORKER_PROCESSES
          value: "auto"
        - name: NGINX_WORKER_CONNECTIONS
          value: "1024"
        volumeMounts:
        - name: nginx-config
          mountPath: /etc/nginx/conf.d
          readOnly: true
        - name: nginx-cache
          mountPath: /var/cache/nginx
        - name: nginx-run
          mountPath: /var/run
      volumes:
      - name: nginx-config
        configMap:
          name: carddemo-frontend-nginx-config
          defaultMode: 0644
      - name: nginx-cache
        emptyDir: {}
      - name: nginx-run
        emptyDir: {}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30

---
# Service for Frontend Application
apiVersion: v1
kind: Service
metadata:
  name: carddemo-frontend-service
  labels:
    app: carddemo-frontend
    tier: frontend
spec:
  type: ClusterIP
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
    name: http
  selector:
    app: carddemo-frontend

---
# ConfigMap for Frontend Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: carddemo-frontend-config
  labels:
    app: carddemo-frontend
    tier: frontend
data:
  api-gateway-url: "http://carddemo-gateway-service:8080/api"
  app-title: "CardDemo - Credit Card Management System"
  app-version: "v2.1.0"
  environment: "kubernetes"

---
# ConfigMap for NGINX Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: carddemo-frontend-nginx-config
  labels:
    app: carddemo-frontend
    tier: frontend
data:
  default.conf: |
    # NGINX configuration for React SPA with optimized static asset serving
    
    # Enable gzip compression for performance optimization
    gzip on;
    gzip_types
        text/plain
        text/css
        text/js
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_comp_level 6;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    server {
        listen 80;
        server_name localhost;
        
        # Document root for React build files
        root /usr/share/nginx/html;
        index index.html;
        
        # Enable static asset caching for performance
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header Vary Accept-Encoding;
        }
        
        # React Router support - serve index.html for all routes
        location / {
            try_files $uri $uri/ /index.html;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }
        
        # Health check endpoint for Kubernetes probes
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Security - deny access to sensitive files
        location ~ /\. {
            deny all;
        }
        
        location ~ ^/(package\.json|yarn\.lock|package-lock\.json) {
            deny all;
        }
        
        # Error pages
        error_page 404 /index.html;
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

---
# HorizontalPodAutoscaler for Frontend Scaling
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: carddemo-frontend-hpa
  labels:
    app: carddemo-frontend
    tier: frontend
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: carddemo-frontend
  minReplicas: 2
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
      - type: Percent
        value: 50
        periodSeconds: 60