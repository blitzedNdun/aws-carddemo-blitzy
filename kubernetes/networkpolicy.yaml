# Kubernetes NetworkPolicy resources for CardDemo application
# Implements network segmentation and security controls for PCI DSS compliance
# Enforces least-privilege network access between application components

---
# Default deny all ingress and egress traffic
# This policy applies to all pods in the namespace and denies all traffic by default
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: default
  labels:
    app: carddemo
    policy-type: security
    compliance: pci-dss
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress

---
# Allow DNS resolution for all pods
# Required for service discovery and external dependencies
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dns
  namespace: default
  labels:
    app: carddemo
    policy-type: system
spec:
  podSelector: {}
  policyTypes:
  - Egress
  egress:
  - to: []
    ports:
    - protocol: UDP
      port: 53
    - protocol: TCP
      port: 53

---
# Allow external ingress traffic to Spring Cloud Gateway
# Controls entry point for all external client requests
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-external-to-gateway
  namespace: default
  labels:
    app: carddemo
    policy-type: ingress
    compliance: pci-dss
spec:
  podSelector:
    matchLabels:
      app: carddemo-gateway
  policyTypes:
  - Ingress
  ingress:
  - from: []
    ports:
    - protocol: TCP
      port: 8080

---
# Allow Gateway to Backend communication
# Enables API gateway to route requests to Spring Boot services
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-gateway-to-backend
  namespace: default
  labels:
    app: carddemo
    policy-type: internal
spec:
  podSelector:
    matchLabels:
      app: carddemo-backend
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: carddemo-gateway
    ports:
    - protocol: TCP
      port: 8080

---
# Allow Backend egress to Gateway
# Enables backend services to respond to gateway requests
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-backend-to-gateway-egress
  namespace: default
  labels:
    app: carddemo
    policy-type: internal
spec:
  podSelector:
    matchLabels:
      app: carddemo-backend
  policyTypes:
  - Egress
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: carddemo-gateway
    ports:
    - protocol: TCP
      port: 8080

---
# Restrict PostgreSQL database access to backend pods only
# Critical PCI DSS requirement - database isolation
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: restrict-database-access
  namespace: default
  labels:
    app: carddemo
    policy-type: database
    compliance: pci-dss
    security-level: critical
spec:
  podSelector:
    matchLabels:
      app: postgresql
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: carddemo-backend
    ports:
    - protocol: TCP
      port: 5432

---
# Allow Backend egress to PostgreSQL database
# Enables Spring Boot services to access data persistence layer
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-backend-to-database
  namespace: default
  labels:
    app: carddemo
    policy-type: database
spec:
  podSelector:
    matchLabels:
      app: carddemo-backend
  policyTypes:
  - Egress
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: postgresql
    ports:
    - protocol: TCP
      port: 5432

---
# Restrict Redis session store access to authenticated services
# Limits session data access to backend and gateway services only
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: restrict-redis-access
  namespace: default
  labels:
    app: carddemo
    policy-type: session
    compliance: pci-dss
    security-level: high
spec:
  podSelector:
    matchLabels:
      app: redis
  policyTypes:
  - Ingress
  ingress:
  - from:
    - podSelector:
        matchLabels:
          app: carddemo-backend
    - podSelector:
        matchLabels:
          app: carddemo-gateway
    ports:
    - protocol: TCP
      port: 6379

---
# Allow Backend and Gateway egress to Redis
# Enables Spring Session integration for distributed session management
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-services-to-redis
  namespace: default
  labels:
    app: carddemo
    policy-type: session
spec:
  podSelector:
    matchLabels:
      app: carddemo-backend
  policyTypes:
  - Egress
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-gateway-to-redis
  namespace: default
  labels:
    app: carddemo
    policy-type: session
spec:
  podSelector:
    matchLabels:
      app: carddemo-gateway
  policyTypes:
  - Egress
  egress:
  - to:
    - podSelector:
        matchLabels:
          app: redis
    ports:
    - protocol: TCP
      port: 6379

---
# Allow external traffic to Frontend (React SPA)
# Enables public access to the web application
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-external-to-frontend
  namespace: default
  labels:
    app: carddemo
    policy-type: frontend
spec:
  podSelector:
    matchLabels:
      app: carddemo-frontend
  policyTypes:
  - Ingress
  ingress:
  - from: []
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443

---
# Allow services to communicate with Kubernetes API server
# Required for health checks, service discovery, and configuration
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-kubernetes-api
  namespace: default
  labels:
    app: carddemo
    policy-type: system
spec:
  podSelector:
    matchLabels:
      app: carddemo-backend
  policyTypes:
  - Egress
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 6443

---
# Allow health check and monitoring traffic
# Enables Kubernetes health probes and Spring Boot Actuator endpoints
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-health-monitoring
  namespace: default
  labels:
    app: carddemo
    policy-type: monitoring
spec:
  podSelector:
    matchLabels:
      app: carddemo-backend
  policyTypes:
  - Ingress
  ingress:
  - from: []
    ports:
    - protocol: TCP
      port: 8080
      # Spring Boot Actuator endpoints
  - from: []
    ports:
    - protocol: TCP
      port: 8081
      # Management port if configured separately
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-gateway-health-monitoring
  namespace: default
  labels:
    app: carddemo
    policy-type: monitoring
spec:
  podSelector:
    matchLabels:
      app: carddemo-gateway
  policyTypes:
  - Ingress
  ingress:
  - from: []
    ports:
    - protocol: TCP
      port: 8080
      # Spring Cloud Gateway health endpoints

---
# Allow egress for external dependencies and package repositories
# Required for application dependencies and security updates
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-external-dependencies
  namespace: default
  labels:
    app: carddemo
    policy-type: external
spec:
  podSelector:
    matchLabels:
      app: carddemo-backend
  policyTypes:
  - Egress
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 80
    - protocol: TCP
      port: 443