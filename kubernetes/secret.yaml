# Kubernetes Secret manifest for CardDemo application sensitive configuration data
# This Secret stores database credentials, Redis connection information, and JWT signing keys
# for the CardDemo backend service, implementing secure credential management that replaces
# mainframe RACF security configurations with cloud-native secret storage patterns.
#
# Referenced in Technical Specification:
# - Section 8.4.3: Core Kubernetes Objects Configuration
# - Section 6.4: Security Architecture - Database and JWT credential management
#
# Security Implementation:
# - Separates sensitive data from application code
# - Uses base64 encoding for secure storage as per Kubernetes requirements
# - Provides centralized credential management for PostgreSQL and Redis
# - Supports Spring Security JWT token signing and validation

apiVersion: v1
kind: Secret
metadata:
  name: carddemo-backend-secret
  namespace: default
  labels:
    app: carddemo-backend
    component: security
    tier: application
  annotations:
    description: "Sensitive configuration data for CardDemo backend services"
    documentation: "See Technical Specification Section 8.4.3 for detailed requirements"
type: Opaque
data:
  # PostgreSQL database connection credentials
  # Connection URL: jdbc:postgresql://postgresql-service:5432/carddemo
  DATABASE_URL: amRiYzpwb3N0Z3Jlc3FsOi8vcG9zdGdyZXNxbC1zZXJ2aWNlOjU0MzIvY2FyZGRlbW8=
  
  # PostgreSQL database username: carddemo_user
  DATABASE_USERNAME: Y2FyZGRlbW9fdXNlcg==
  
  # PostgreSQL database password (production value should be generated securely)
  DATABASE_PASSWORD: Q2FyZERlbW9TZWN1cmVQYXNzd29yZDIwMjQ=
  
  # Redis session store connection URL: redis://redis-service:6379
  REDIS_URL: cmVkaXM6Ly9yZWRpcy1zZXJ2aWNlOjYzNzk=
  
  # JWT signing key for authentication token security
  # Production key should be generated using cryptographically secure methods
  JWT_SECRET: Q2FyZERlbW9KV1RTaWduaW5nS2V5MjAyNFNlY3VyZVRva2VuRm9yU3ByaW5nU2VjdXJpdHk=
  
  # Additional database connection properties for HikariCP configuration
  DB_POOL_SIZE: MjA=  # 20
  DB_MIN_IDLE: NQ==   # 5
  
  # Redis session configuration
  REDIS_PASSWORD: UmVkaXNTZWN1cmVQYXNzd29yZDIwMjQ=
  
  # Session timeout configuration (30 minutes = 1800 seconds)
  SESSION_TIMEOUT: MTgwMA==
  
  # JWT token expiration time (1 hour = 3600 seconds)  
  JWT_EXPIRATION: MzYwMA==
---
# Additional secret for PostgreSQL StatefulSet (as referenced in Section 8.4.3)
apiVersion: v1
kind: Secret
metadata:
  name: postgresql-secret
  namespace: default
  labels:
    app: postgresql
    component: database
    tier: data
  annotations:
    description: "PostgreSQL StatefulSet specific credentials"
    documentation: "Referenced in Technical Specification Section 8.4.3"
type: Opaque
data:
  # PostgreSQL superuser credentials for StatefulSet initialization
  username: Y2FyZGRlbW9fdXNlcg==  # carddemo_user
  password: Q2FyZERlbW9TZWN1cmVQYXNzd29yZDIwMjQ=  # CardDemoSecurePassword2024
  
  # PostgreSQL database name
  database: Y2FyZGRlbW8=  # carddemo