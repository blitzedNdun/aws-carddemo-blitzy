# PostgreSQL StatefulSet Configuration for CardDemo Application
# Replaces VSAM KSDS datasets with enterprise-grade relational database
# Provides ACID compliance and financial data integrity for the modernized system

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  labels:
    app: postgresql
    tier: database
    component: carddemo-database
spec:
  serviceName: postgresql-service
  replicas: 1
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
        tier: database
        version: v17.5
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 999  # postgres user
        runAsGroup: 999 # postgres group
        fsGroup: 999
      containers:
      - name: postgresql
        image: postgres:17.5
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5432
          name: postgresql
          protocol: TCP
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        env:
        - name: POSTGRES_DB
          value: "carddemo"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgresql-secret
              key: password
        - name: PGDATA
          value: "/var/lib/postgresql/data/pgdata"
        - name: POSTGRES_INITDB_ARGS
          value: "--auth-host=md5 --auth-local=trust"
        volumeMounts:
        - name: postgresql-storage
          mountPath: /var/lib/postgresql/data
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 2
          successThreshold: 1
        startupProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 30
          successThreshold: 1
  volumeClaimTemplates:
  - metadata:
      name: postgresql-storage
      labels:
        app: postgresql
        component: database-storage
    spec:
      accessModes: 
      - ReadWriteOnce
      storageClassName: "fast-ssd"
      resources:
        requests:
          storage: 100Gi

---
# PostgreSQL Service Configuration
# Provides stable network identity and load balancing for database access

apiVersion: v1
kind: Service
metadata:
  name: postgresql-service
  labels:
    app: postgresql
    tier: database
    component: carddemo-database
spec:
  type: ClusterIP
  ports:
  - port: 5432
    targetPort: 5432
    protocol: TCP
    name: postgresql
  selector:
    app: postgresql
  sessionAffinity: None

---
# PostgreSQL Secret Configuration
# Stores sensitive database credentials securely
# Note: In production, these values should be generated securely and not stored in plain text

apiVersion: v1
kind: Secret
metadata:
  name: postgresql-secret
  labels:
    app: postgresql
    component: database-credentials
type: Opaque
stringData:
  username: "carddemo_user"
  password: "secure_carddemo_password_2024"

---
# PostgreSQL ConfigMap for Advanced Configuration
# Contains PostgreSQL configuration tuned for CardDemo workload

apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-config
  labels:
    app: postgresql
    component: database-config
data:
  postgresql.conf: |
    # PostgreSQL Configuration for CardDemo Application
    # Optimized for financial transaction processing workload
    
    # Memory Configuration
    shared_buffers = 256MB
    effective_cache_size = 1GB
    work_mem = 16MB
    maintenance_work_mem = 128MB
    
    # Connection Configuration
    max_connections = 100
    
    # Checkpoint Configuration
    checkpoint_timeout = 5min
    checkpoint_completion_target = 0.9
    
    # Write Ahead Logging (WAL) Configuration
    wal_level = replica
    max_wal_size = 1GB
    min_wal_size = 80MB
    
    # Query Planner Configuration
    random_page_cost = 1.1
    effective_io_concurrency = 200
    
    # Logging Configuration
    log_destination = 'stderr'
    logging_collector = on
    log_directory = 'log'
    log_filename = 'postgresql-%Y-%m-%d_%H%M%S.log'
    log_file_mode = 0600
    log_statement = 'mod'
    log_min_duration_statement = 1000
    
    # Performance Monitoring
    track_activities = on
    track_counts = on
    track_io_timing = on
    track_functions = pl
    
    # Security Configuration
    ssl = off  # Will be enabled with proper certificates in production
    password_encryption = md5
    
  pg_hba.conf: |
    # PostgreSQL Client Authentication Configuration
    # TYPE  DATABASE        USER            ADDRESS                 METHOD
    
    # Local connections
    local   all             all                                     trust
    
    # IPv4 local connections
    host    all             all             127.0.0.1/32            md5
    
    # IPv6 local connections  
    host    all             all             ::1/128                 md5
    
    # Kubernetes cluster connections
    host    all             all             10.0.0.0/8              md5
    host    all             all             172.16.0.0/12           md5
    host    all             all             192.168.0.0/16          md5