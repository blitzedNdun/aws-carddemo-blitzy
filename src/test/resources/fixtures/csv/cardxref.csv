# =====================================================================================
# CardDemo Test Fixture: Card Cross-Reference Data (CSV Format)
# Description: Comprehensive test data for card-to-account-customer relationship
#              validation, foreign key constraint testing, and JPA association mapping
# Author: Blitzy Agent
# Date: 2024
# Version: 1.0
# Dependencies: Card.java, Account.java entities and test database schema
# =====================================================================================

# Test Data Categories:
# 1. Valid Relationships - Cards with proper account/customer associations
# 2. Edge Cases - Boundary conditions and special scenarios
# 3. Constraint Violations - Invalid references for testing error handling
# 4. Orphaned References - Cards without valid account/customer links
# 5. Complex Scenarios - Multiple cards per account, inactive statuses, etc.

# CSV Header: card_number,account_id,customer_id,relationship_status,test_category,notes
card_number,account_id,customer_id,relationship_status,test_category,notes

# =====================================================================================
# 1. VALID RELATIONSHIPS - Standard card-to-account-customer associations
# These records represent normal, valid relationships for positive testing
# =====================================================================================

# Active cards with valid account and customer relationships
0500024453765740,00000000005,000000005,VALID,STANDARD_RELATIONSHIP,Active card with valid account and customer
0683586198171516,00000000027,000000027,VALID,STANDARD_RELATIONSHIP,Active card with valid account and customer
0923877193247330,00000000002,000000002,VALID,STANDARD_RELATIONSHIP,Active card with valid account and customer
0927987108636232,00000000020,000000020,VALID,STANDARD_RELATIONSHIP,Active card with valid account and customer
0982496213629795,00000000012,000000012,VALID,STANDARD_RELATIONSHIP,Active card with valid account and customer
1014086565224350,00000000044,000000044,VALID,STANDARD_RELATIONSHIP,Active card with valid account and customer
1142167692878931,00000000037,000000037,VALID,STANDARD_RELATIONSHIP,Active card with valid account and customer
1561409106491600,00000000035,000000035,VALID,STANDARD_RELATIONSHIP,Active card with valid account and customer
2745303720002090,00000000039,000000039,VALID,STANDARD_RELATIONSHIP,Active card with valid account and customer
2760836797107565,00000000024,000000024,VALID,STANDARD_RELATIONSHIP,Active card with valid account and customer

# Cards with high-value accounts for credit limit testing
2871968252812490,00000000006,000000006,VALID,HIGH_VALUE_ACCOUNT,Card linked to high credit limit account
2940139362300449,00000000022,000000022,VALID,HIGH_VALUE_ACCOUNT,Card linked to high credit limit account
2988091353094312,00000000004,000000004,VALID,HIGH_VALUE_ACCOUNT,Card linked to high credit limit account
3260763612337560,00000000010,000000010,VALID,HIGH_VALUE_ACCOUNT,Card linked to high credit limit account
3766281984155154,00000000041,000000041,VALID,HIGH_VALUE_ACCOUNT,Card linked to high credit limit account

# Premium cards for special customer segments
3940246016141489,00000000019,000000019,VALID,PREMIUM_CARD,Premium card with enhanced benefits
3999169246375885,00000000003,000000003,VALID,PREMIUM_CARD,Premium card with enhanced benefits
4011500891777367,00000000013,000000013,VALID,PREMIUM_CARD,Premium card with enhanced benefits
4385271476627819,00000000034,000000034,VALID,PREMIUM_CARD,Premium card with enhanced benefits
4534784102713951,00000000036,000000036,VALID,PREMIUM_CARD,Premium card with enhanced benefits

# =====================================================================================
# 2. MULTIPLE CARDS PER ACCOUNT - Testing one-to-many relationships
# These records test scenarios where one account can have multiple cards
# =====================================================================================

# Account 00000000007 with multiple cards (primary and supplementary)
4859452612877065,00000000007,000000007,VALID,MULTI_CARD_ACCOUNT,Primary card for account with multiple cards
5407099850479866,00000000007,000000007,VALID,MULTI_CARD_ACCOUNT,Secondary card for same account
5656830544981216,00000000007,000000007,VALID,MULTI_CARD_ACCOUNT,Third card for same account

# Account 00000000015 with family cards
5671184478505844,00000000015,000000015,VALID,FAMILY_ACCOUNT,Main cardholder
5787351228879339,00000000015,000000015,VALID,FAMILY_ACCOUNT,Spouse card for same account
5975117516616077,00000000015,000000015,VALID,FAMILY_ACCOUNT,Child card for same account

# Account 00000000025 with business cards
6009619150674526,00000000025,000000025,VALID,BUSINESS_ACCOUNT,Primary business card
6349250331648509,00000000025,000000025,VALID,BUSINESS_ACCOUNT,Employee card for business account
6503535181795992,00000000025,000000025,VALID,BUSINESS_ACCOUNT,Manager card for business account

# =====================================================================================
# 3. EDGE CASES AND BOUNDARY CONDITIONS
# These records test boundary conditions and special scenarios
# =====================================================================================

# Cards with minimum/maximum account IDs
6509230362553816,00000000001,000000001,VALID,BOUNDARY_CONDITION,Minimum account ID boundary test
6723000463207764,99999999999,999999999,VALID,BOUNDARY_CONDITION,Maximum account ID boundary test

# Cards with recently opened accounts
6727055190616014,00000000016,000000016,VALID,NEW_ACCOUNT,Card for recently opened account
6832676047698087,00000000033,000000033,VALID,NEW_ACCOUNT,Card for recently opened account

# Cards approaching expiration
7026637615032277,00000000031,000000031,VALID,EXPIRING_CARD,Card approaching expiration date
7058267261837752,00000000043,000000043,VALID,EXPIRING_CARD,Card approaching expiration date

# International cards with special formatting
7094142751055551,00000000032,000000032,VALID,INTERNATIONAL_CARD,International card with special requirements
7251508149188883,00000000029,000000029,VALID,INTERNATIONAL_CARD,International card with special requirements

# =====================================================================================
# 4. INACTIVE AND SUSPENDED CARDS - Testing status scenarios
# These records test various card status conditions
# =====================================================================================

# Suspended cards (still maintain relationships)
7379335634661142,00000000045,000000045,VALID,SUSPENDED_CARD,Temporarily suspended card
7427684863423209,00000000011,000000011,VALID,SUSPENDED_CARD,Temporarily suspended card

# Closed cards (historical relationships)
7443870988897530,00000000038,000000038,VALID,CLOSED_CARD,Closed card with historical relationship
8040580410348680,00000000026,000000026,VALID,CLOSED_CARD,Closed card with historical relationship

# Cards pending activation
8112545834239735,00000000023,000000023,VALID,PENDING_ACTIVATION,Card pending customer activation
8262593602473076,00000000049,000000049,VALID,PENDING_ACTIVATION,Card pending customer activation

# =====================================================================================
# 5. CONSTRAINT VIOLATION TEST CASES
# These records test foreign key constraint violations and error handling
# =====================================================================================

# Cards with non-existent account IDs (should fail foreign key constraint)
8517867958206008,00000000999,000000001,INVALID,FK_VIOLATION_ACCOUNT,Non-existent account ID for constraint testing
8934369351894783,00000000888,000000002,INVALID,FK_VIOLATION_ACCOUNT,Non-existent account ID for constraint testing

# Cards with non-existent customer IDs (should fail foreign key constraint)  
9056297931664011,00000000001,000000999,INVALID,FK_VIOLATION_CUSTOMER,Non-existent customer ID for constraint testing
9349107475869214,00000000002,000000888,INVALID,FK_VIOLATION_CUSTOMER,Non-existent customer ID for constraint testing

# Cards with both invalid account and customer IDs
9501733721429893,00000000777,000000777,INVALID,FK_VIOLATION_BOTH,Both account and customer IDs non-existent
9680294154603697,00000000666,000000666,INVALID,FK_VIOLATION_BOTH,Both account and customer IDs non-existent

# =====================================================================================
# 6. DATA FORMAT VALIDATION TEST CASES
# These records test data format validation and edge cases
# =====================================================================================

# Cards with account/customer ID mismatches (valid IDs but incorrect pairing)
9800558340899658,00000000005,000000010,INVALID,MISMATCH_VIOLATION,Valid IDs but incorrect account-customer pairing
9876543210123456,00000000010,000000005,INVALID,MISMATCH_VIOLATION,Valid IDs but incorrect account-customer pairing

# Cards for testing Luhn algorithm validation (invalid card numbers)
1234567890123456,00000000001,000000001,INVALID,LUHN_VIOLATION,Invalid card number (fails Luhn algorithm)
9999999999999999,00000000002,000000002,INVALID,LUHN_VIOLATION,Invalid card number (fails Luhn algorithm)

# Cards with leading zeros validation
0000000000000018,00000000003,000000003,VALID,LEADING_ZEROS_TEST,Card number with leading zeros
0000000000000026,00000000004,000000004,VALID,LEADING_ZEROS_TEST,Card number with leading zeros

# =====================================================================================
# 7. PERFORMANCE TEST DATA
# Large volume test data for performance and load testing scenarios
# =====================================================================================

# Batch of cards for performance testing (simulated high-volume scenario)
4000000000000002,00000000050,000000050,VALID,PERFORMANCE_TEST,Performance test card 1
4000000000000010,00000000051,000000051,VALID,PERFORMANCE_TEST,Performance test card 2
4000000000000028,00000000052,000000052,VALID,PERFORMANCE_TEST,Performance test card 3
4000000000000036,00000000053,000000053,VALID,PERFORMANCE_TEST,Performance test card 4
4000000000000044,00000000054,000000054,VALID,PERFORMANCE_TEST,Performance test card 5
4000000000000051,00000000055,000000055,VALID,PERFORMANCE_TEST,Performance test card 6
4000000000000069,00000000056,000000056,VALID,PERFORMANCE_TEST,Performance test card 7
4000000000000077,00000000057,000000057,VALID,PERFORMANCE_TEST,Performance test card 8
4000000000000085,00000000058,000000058,VALID,PERFORMANCE_TEST,Performance test card 9
4000000000000093,00000000059,000000059,VALID,PERFORMANCE_TEST,Performance test card 10

# =====================================================================================
# 8. SPRING BATCH PROCESSING TEST CASES
# Specific test data for Spring Batch cross-reference processing validation
# =====================================================================================

# Cards for batch processing chunk testing (10 records per chunk)
5100000000000001,00000000060,000000060,VALID,BATCH_CHUNK_1,Spring Batch chunk processing test 1
5100000000000019,00000000061,000000061,VALID,BATCH_CHUNK_1,Spring Batch chunk processing test 2
5100000000000027,00000000062,000000062,VALID,BATCH_CHUNK_1,Spring Batch chunk processing test 3
5100000000000035,00000000063,000000063,VALID,BATCH_CHUNK_1,Spring Batch chunk processing test 4
5100000000000043,00000000064,000000064,VALID,BATCH_CHUNK_1,Spring Batch chunk processing test 5
5100000000000050,00000000065,000000065,VALID,BATCH_CHUNK_2,Spring Batch chunk processing test 6
5100000000000068,00000000066,000000066,VALID,BATCH_CHUNK_2,Spring Batch chunk processing test 7
5100000000000076,00000000067,000000067,VALID,BATCH_CHUNK_2,Spring Batch chunk processing test 8
5100000000000084,00000000068,000000068,VALID,BATCH_CHUNK_2,Spring Batch chunk processing test 9
5100000000000092,00000000069,000000069,VALID,BATCH_CHUNK_2,Spring Batch chunk processing test 10

# Cards for batch error handling and retry testing
5200000000000003,00000000070,000000070,VALID,BATCH_ERROR_TEST,Batch processing error handling test
5200000000000011,00000000000,000000000,INVALID,BATCH_ERROR_TEST,Batch processing error - invalid references
5200000000000029,00000000071,000000071,VALID,BATCH_RETRY_TEST,Batch processing retry mechanism test
5200000000000037,00000000072,000000072,VALID,BATCH_SKIP_TEST,Batch processing skip logic test

# =====================================================================================
# 9. JPA ASSOCIATION MAPPING TEST CASES
# Test data specifically designed for JPA relationship and association testing
# =====================================================================================

# Cards for eager/lazy loading testing
5300000000000005,00000000073,000000073,VALID,JPA_LAZY_LOADING,JPA lazy loading relationship test
5300000000000013,00000000074,000000074,VALID,JPA_EAGER_LOADING,JPA eager loading relationship test

# Cards for cascade operations testing
5300000000000021,00000000075,000000075,VALID,JPA_CASCADE_TEST,JPA cascade operations test
5300000000000039,00000000076,000000076,VALID,JPA_ORPHAN_REMOVAL,JPA orphan removal test

# Cards for bidirectional relationship testing
5300000000000047,00000000077,000000077,VALID,JPA_BIDIRECTIONAL,JPA bidirectional relationship test
5300000000000054,00000000078,000000078,VALID,JPA_UNIDIRECTIONAL,JPA unidirectional relationship test

# =====================================================================================
# 10. INTEGRATION TEST SCENARIOS
# Complex scenarios for end-to-end integration testing
# =====================================================================================

# Multi-service integration test cards
5400000000000007,00000000079,000000079,VALID,INTEGRATION_TEST,Multi-service integration test card
5400000000000015,00000000080,000000080,VALID,INTEGRATION_TEST,Cross-service relationship validation

# Transaction processing integration
5400000000000023,00000000081,000000081,VALID,TRANSACTION_INTEGRATION,Card for transaction processing tests
5400000000000031,00000000082,000000082,VALID,TRANSACTION_INTEGRATION,Card for payment processing tests

# Security and authorization integration
5400000000000049,00000000083,000000083,VALID,SECURITY_INTEGRATION,Card for security authorization tests
5400000000000056,00000000084,000000084,VALID,SECURITY_INTEGRATION,Card for role-based access tests

# =====================================================================================
# 11. COBOL-TO-JAVA MIGRATION VALIDATION TEST CASES
# Test data to validate exact behavioral equivalence with original COBOL system
# =====================================================================================

# Cards matching original VSAM CARDDAT key structures
5500000000000009,00000000085,000000085,VALID,COBOL_MIGRATION,VSAM key structure validation
5500000000000017,00000000086,000000086,VALID,COBOL_MIGRATION,COBOL cross-reference logic validation

# Cards for COMP-3 precision validation
5500000000000025,00000000087,000000087,VALID,PRECISION_TEST,BigDecimal precision validation
5500000000000033,00000000088,000000088,VALID,PRECISION_TEST,Financial calculation precision test

# Cards for date handling compatibility
5500000000000041,00000000089,000000089,VALID,DATE_COMPATIBILITY,COBOL date format compatibility
5500000000000058,00000000090,000000090,VALID,DATE_COMPATIBILITY,Date calculation equivalence test