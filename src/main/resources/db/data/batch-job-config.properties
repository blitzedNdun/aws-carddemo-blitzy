# =============================================================================
# CARDDEMO SPRING BATCH JOB CONFIGURATION PROPERTIES
# =============================================================================
# Spring Batch configuration properties defining execution parameters, chunk sizes,
# error handling, and performance tuning for ASCII data loading jobs
#
# Purpose: Provides enterprise-grade batch processing configuration for migrating
#          mainframe VSAM datasets to PostgreSQL with exact precision preservation
#          and optimal performance within 4-hour processing window constraints
#
# Key Features:
# - Chunk-oriented processing with 1000-record chunks per Section 6.2.4.5
# - Fault tolerance and recovery with configurable commit intervals
# - Memory management within 10% increase limit of CICS baseline
# - Comprehensive error handling with exponential backoff and dead letter queues
# - Performance tuning for high-volume ASCII data processing
# - Environment-specific data loading paths and validation thresholds
#
# Based on: Technical Specification Section 0 Summary of Changes
#           Section 6.2.4.5 Batch Processing Performance Requirements
#           Section 6.6 Testing Strategy
#
# Author: Blitzy agent
# Created: Spring Batch configuration properties for ASCII data loading
# Version: 1.0
# =============================================================================

# =============================================================================
# BATCH JOB CONFIGURATION PROPERTIES
# =============================================================================
# Core batch processing configuration defining chunk sizes, commit intervals,
# and performance parameters optimized for enterprise-scale data migration

# Default chunk size for all ASCII data loading jobs (1000 records per Section 6.2.4.5)
# Balances memory consumption with commit frequency requirements
batch.job.chunk.size=1000

# Commit interval configuration for transaction boundary management
# Ensures optimal database transaction performance and rollback scope
batch.job.commit.interval=1000

# Maximum concurrent job executions to prevent resource exhaustion
batch.job.max.concurrent.executions=4

# Job execution timeout in seconds (4 hours = 14400 seconds)
# Ensures completion within required processing window
batch.job.execution.timeout=14400

# Thread pool configuration for parallel batch processing
batch.job.thread.pool.core.size=4
batch.job.thread.pool.max.size=8
batch.job.thread.pool.queue.capacity=100

# =============================================================================
# ERROR HANDLING AND FAULT TOLERANCE CONFIGURATION
# =============================================================================
# Comprehensive error handling settings with skip policies, retry logic,
# and circuit breaker patterns for reliable batch execution

# Skip policy configuration for data quality issues
batch.job.skip.limit=100
batch.job.skip.on.validation.failure=true
batch.job.skip.on.parsing.failure=true
batch.job.skip.on.write.failure=false

# Retry policy configuration with exponential backoff
batch.job.retry.max.attempts=3
batch.job.retry.initial.delay=1000
batch.job.retry.multiplier=2.0
batch.job.retry.max.delay=10000

# Retry on specific exception types for transient failures
batch.job.retry.on.connection.failure=true
batch.job.retry.on.timeout=true
batch.job.retry.on.deadlock=true

# Circuit breaker configuration for external dependencies
batch.job.circuit.breaker.enabled=true
batch.job.circuit.breaker.failure.threshold=5
batch.job.circuit.breaker.timeout=30000
batch.job.circuit.breaker.reset.timeout=60000

# Dead letter queue configuration for failed records
batch.job.dead.letter.queue.enabled=true
batch.job.dead.letter.queue.path=logs/batch/failed-records
batch.job.dead.letter.queue.max.size=1000

# =============================================================================
# MEMORY MANAGEMENT AND PERFORMANCE TUNING
# =============================================================================
# Memory optimization settings maintaining usage within 10% increase limit
# while supporting large batch volumes per performance requirements

# JVM heap management for batch processing
batch.job.jvm.heap.initial=512m
batch.job.jvm.heap.maximum=2048m
batch.job.jvm.heap.new.ratio=3

# Garbage collection tuning for batch workloads
batch.job.gc.algorithm=G1GC
batch.job.gc.max.pause.time=200
batch.job.gc.parallel.threads=4

# Database connection pool sizing for batch operations
batch.job.connection.pool.min.size=5
batch.job.connection.pool.max.size=20
batch.job.connection.pool.validation.timeout=5000

# Buffer and cache sizing optimization
batch.job.read.buffer.size=8192
batch.job.write.buffer.size=16384
batch.job.cache.size=10000

# =============================================================================
# DATA LOADING CONFIGURATION
# =============================================================================
# Environment-specific data loading paths and validation thresholds
# for ASCII file processing with exact COBOL precision preservation

# ASCII data file paths - configurable per environment
batch.job.data.path.base=classpath:db/data
batch.job.data.path.account=${batch.job.data.path.base}/acctdata.txt
batch.job.data.path.customer=${batch.job.data.path.base}/custdata.txt
batch.job.data.path.card=${batch.job.data.path.base}/carddata.txt
batch.job.data.path.transaction=${batch.job.data.path.base}/dailytran.txt
batch.job.data.path.reference=${batch.job.data.path.base}/

# File encoding configuration for ASCII processing
batch.job.data.encoding=UTF-8
batch.job.data.line.separator=\\n
batch.job.data.field.separator=

# Validation thresholds for data quality assurance
batch.job.validation.error.threshold=5.0
batch.job.validation.warning.threshold=2.0
batch.job.validation.duplicate.check.enabled=true
batch.job.validation.referential.integrity.enabled=true

# BigDecimal precision configuration matching COBOL COMP-3
batch.job.decimal.precision=31
batch.job.decimal.scale=2
batch.job.decimal.rounding.mode=HALF_EVEN
batch.job.decimal.math.context=DECIMAL128

# =============================================================================
# JOB-SPECIFIC CONFIGURATION
# =============================================================================
# Individual job configurations for each data loading process
# with specialized settings per data type and volume requirements

# Account Data Loading Job Configuration
batch.job.account.enabled=true
batch.job.account.chunk.size=${batch.job.chunk.size}
batch.job.account.skip.limit=10
batch.job.account.expected.record.count=50
batch.job.account.record.length=300

# Customer Data Loading Job Configuration  
batch.job.customer.enabled=true
batch.job.customer.chunk.size=${batch.job.chunk.size}
batch.job.customer.skip.limit=5
batch.job.customer.expected.record.count=50
batch.job.customer.record.length=312
batch.job.customer.pii.protection.enabled=true

# Card Data Loading Job Configuration
batch.job.card.enabled=true
batch.job.card.chunk.size=${batch.job.chunk.size}
batch.job.card.skip.limit=5
batch.job.card.expected.record.count=500
batch.job.card.record.length=150
batch.job.card.luhn.validation.enabled=true

# Transaction Data Loading Job Configuration
batch.job.transaction.enabled=true
batch.job.transaction.chunk.size=5000
batch.job.transaction.skip.limit=100
batch.job.transaction.expected.record.count=10000
batch.job.transaction.record.length=189
batch.job.transaction.partition.enabled=true

# Reference Data Loading Job Configuration
batch.job.reference.enabled=true
batch.job.reference.chunk.size=500
batch.job.reference.skip.limit=0
batch.job.reference.multi.resource.enabled=true
batch.job.reference.files=tcatbal.txt,discgrp.txt,trantype.txt,trancatg.txt

# =============================================================================
# MONITORING AND OBSERVABILITY CONFIGURATION
# =============================================================================
# Comprehensive monitoring setup for batch job execution tracking,
# performance metrics collection, and operational visibility

# Metrics collection configuration
batch.job.metrics.enabled=true
batch.job.metrics.collection.interval=30
batch.job.metrics.export.prometheus.enabled=true
batch.job.metrics.export.jmx.enabled=true

# Execution statistics tracking
batch.job.statistics.enabled=true
batch.job.statistics.detailed=true
batch.job.statistics.persist=true
batch.job.statistics.retention.days=90

# Health check configuration
batch.job.health.check.enabled=true
batch.job.health.check.interval=60
batch.job.health.check.timeout=10

# Performance monitoring thresholds
batch.job.performance.warning.threshold.ms=5000
batch.job.performance.error.threshold.ms=10000
batch.job.performance.memory.warning.threshold=80
batch.job.performance.memory.error.threshold=90

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Comprehensive logging setup for batch processing with audit trail support
# and structured logging for operational monitoring and troubleshooting

# Batch-specific logging configuration
batch.job.logging.level=INFO
batch.job.logging.sql.enabled=false
batch.job.logging.parameters.enabled=false
batch.job.logging.performance.enabled=true

# Audit logging for compliance and tracking
batch.job.audit.enabled=true
batch.job.audit.log.path=logs/batch/audit
batch.job.audit.log.format=JSON
batch.job.audit.retention.days=365

# Step execution logging detail levels
batch.job.step.logging.enabled=true
batch.job.step.logging.progress.interval=1000
batch.job.step.logging.summary.enabled=true

# Error logging configuration
batch.job.error.logging.enabled=true
batch.job.error.logging.stack.trace=true
batch.job.error.logging.context.details=true

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# Security settings for batch job execution including authentication,
# authorization, and data protection during processing

# Authentication and authorization
batch.job.security.enabled=true
batch.job.security.authentication.required=true
batch.job.security.roles.required=BATCH_ADMIN,SYSTEM_ADMIN

# Data protection during processing
batch.job.security.data.encryption.enabled=false
batch.job.security.pii.masking.enabled=true
batch.job.security.audit.trail.enabled=true

# Access control for batch endpoints
batch.job.security.endpoints.authentication=BASIC
batch.job.security.endpoints.roles=BATCH_USER,BATCH_ADMIN

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================
# Database-specific settings for batch processing with connection management,
# transaction isolation, and bulk operation optimization

# Connection management for batch operations
batch.job.database.connection.isolation=SERIALIZABLE
batch.job.database.connection.timeout=30000
batch.job.database.connection.validation.query=SELECT 1

# Bulk operations configuration
batch.job.database.batch.size=100
batch.job.database.bulk.insert.enabled=true
batch.job.database.statement.cache.size=50

# Transaction management
batch.job.database.transaction.timeout=300
batch.job.database.transaction.propagation=REQUIRED
batch.job.database.transaction.rollback.for.any.exception=true

# =============================================================================
# ENVIRONMENT-SPECIFIC OVERRIDES
# =============================================================================
# Environment-specific configuration overrides for development, test,
# and production deployments with appropriate resource allocation

# Development environment overrides
batch.job.dev.chunk.size=100
batch.job.dev.thread.pool.max.size=2
batch.job.dev.logging.level=DEBUG
batch.job.dev.metrics.detailed=true

# Test environment overrides  
batch.job.test.chunk.size=50
batch.job.test.execution.timeout=1800
batch.job.test.validation.strict=true
batch.job.test.data.validation.enabled=true

# Production environment overrides
batch.job.prod.chunk.size=${batch.job.chunk.size}
batch.job.prod.thread.pool.max.size=16
batch.job.prod.monitoring.enhanced=true
batch.job.prod.alerting.enabled=true

# =============================================================================
# RESTART AND RECOVERY CONFIGURATION
# =============================================================================
# Job restart and recovery configuration ensuring reliable batch execution
# with comprehensive failure recovery and restart from failure points

# Job restart capability
batch.job.restart.enabled=true
batch.job.restart.allow.start.if.complete=false
batch.job.restart.increment.parameters=true

# Recovery mechanisms
batch.job.recovery.checkpoint.enabled=true
batch.job.recovery.checkpoint.interval=5000
batch.job.recovery.state.persistence.enabled=true

# Failure recovery configuration
batch.job.recovery.auto.restart.enabled=false
batch.job.recovery.max.restart.attempts=3
batch.job.recovery.failure.notification.enabled=true

# Data consistency checks
batch.job.recovery.data.integrity.check=true
batch.job.recovery.rollback.on.failure=true
batch.job.recovery.cleanup.temp.data=true

# =============================================================================
# NOTIFICATION AND ALERTING CONFIGURATION
# =============================================================================
# Notification system configuration for batch job status updates,
# error alerts, and operational notifications

# Job completion notifications
batch.job.notification.enabled=true
batch.job.notification.on.success=true
batch.job.notification.on.failure=true
batch.job.notification.on.warning=true

# Alert thresholds and conditions
batch.job.alert.execution.time.threshold=3600
batch.job.alert.error.rate.threshold=5.0
batch.job.alert.memory.usage.threshold=85

# Notification channels configuration
batch.job.notification.email.enabled=false
batch.job.notification.slack.enabled=false
batch.job.notification.jms.enabled=false

# =============================================================================
# TESTING AND VALIDATION CONFIGURATION
# =============================================================================
# Testing framework configuration for batch job validation,
# data quality assurance, and regression testing support

# Test data configuration
batch.job.test.data.enabled=true
batch.job.test.data.path=classpath:test-data
batch.job.test.data.cleanup.after.test=true

# Validation configuration
batch.job.validation.enabled=true
batch.job.validation.business.rules=true
batch.job.validation.data.types=true
batch.job.validation.referential.integrity=true

# Mock configuration for testing
batch.job.test.mock.external.services=true
batch.job.test.mock.database.enabled=false
batch.job.test.dry.run.enabled=true